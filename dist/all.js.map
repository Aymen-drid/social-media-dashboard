{"version":3,"sources":["all.js","script.js","theme-switcher.js"],"names":["_themeSwitcher","_interopRequireDefault","require","e","__esModule","default","switchingThemes","themeToggleCheckbox","document","querySelector","toggleText","getElementById","body","documentElement","storedTheme","localStorage","getItem","setAttribute","checked","textContent","systemPrefersDark","window","matchMedia","matches","initialTheme","addEventListener","newTheme","setItem","Object","defineProperty","exports","value"],"mappings":"AAAA,aCAA,IAAAA,eAAAC,uBAAAC,QAAA,yBAAoD,SAAAD,uBAAAE,GAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAA,CAAAE,QAAAF,EAAA,CCA7C,SAASG,kBACZ,IAAMC,EAAsBC,SAASC,cAAc,uBAC7CC,EAAaF,SAASG,eAAe,eACrCC,EAAOJ,SAASK,gBAiB1B,IAAMC,EAAcC,aAAaC,QAAQ,SAEzC,GAAIF,EACAF,EAAKK,aAAa,aAAcH,GAChCP,EAAoBW,QAA0B,SAAhBJ,EAC9BJ,EAAWS,YAA8B,SAAhBL,EAAyB,aAAe,gBAC9D,CAEH,IAAMM,EAAoBC,OAAOC,WAAW,gCAAgCC,QACtEC,EAAeJ,EAAoB,OAAS,QAClDR,EAAKK,aAAa,aAAcO,GAChCjB,EAAoBW,QAAUE,EAC9BV,EAAWS,YAA+B,SAAjBK,EAA0B,aAAe,WACtE,CAGAjB,EAAoBkB,iBAAiB,UA/BrC,WAEI,IAAMC,EAAWnB,EAAoBW,QAAU,OAAS,QAGxDR,EAAWS,YAA2B,SAAbO,EAAsB,aAAe,YAG9Dd,EAAKK,aAAa,aAAcS,GAGhCX,aAAaY,QAAQ,QAASD,EAClC,GAoBA,CDpCAlB,SAASiB,iBAAiB,mBAAoBnB,eAAAA,SDM9CsB,OAAOC,eAAeC,QAAS,aAAc,CAC3CC,OAAO,IAETD,QAAQxB,gBAAkBA","file":"all.js","sourcesContent":[null,"import switchingThemes from '../js/theme-switcher' ;\ndocument.addEventListener('DOMContentLoaded', switchingThemes);\n","export function switchingThemes() {\n    const themeToggleCheckbox = document.querySelector(\"[data-theme-toggle]\");\n    const toggleText = document.getElementById(\"toggle-text\");\n    const body = document.documentElement; // target the <html> element\n// Function to update the   me based on the checkbox state\nfunction updateTheme() {\n    \n    const newTheme = themeToggleCheckbox.checked ? \"dark\" : \"light\";\n    \n    // Update the toggle text\n    toggleText.textContent = newTheme === \"dark\" ? \"Light mode\" : \"Dark mode\";\n    \n    // Update the theme attribute on <html> to switch theme in CSS\n    body.setAttribute(\"data-theme\", newTheme);\n    \n    // Update local storage\n    localStorage.setItem(\"theme\", newTheme);\n}\n\n// Get theme from local storage\nconst storedTheme = localStorage.getItem(\"theme\");\n\nif (storedTheme) {\n    body.setAttribute(\"data-theme\", storedTheme);\n    themeToggleCheckbox.checked = storedTheme === \"dark\";\n    toggleText.textContent = storedTheme === \"dark\" ? \"Light mode\" : \"Dark mode\";\n} else {\n    // Default to system setting if no theme is stored\n    const systemPrefersDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n    const initialTheme = systemPrefersDark ? \"dark\" : \"light\";\n    body.setAttribute(\"data-theme\", initialTheme);\n    themeToggleCheckbox.checked = systemPrefersDark;\n    toggleText.textContent = initialTheme === \"dark\" ? \"Light mode\" : \"Dark mode\";\n}\n\n// Add event listener to the checkbox\nthemeToggleCheckbox.addEventListener(\"change\", updateTheme);\n}\n\n  "]}